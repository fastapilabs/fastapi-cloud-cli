[project]
name = "fastapi-cloud-cli"
dynamic = ["version"]
description = "Deploy and manage FastAPI Cloud apps from the command line ðŸš€"
authors = [{ name = "Patrick Arminio", email = "patrick@fastapilabs.com" }]
requires-python = ">=3.8"
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    "typer >= 0.12.3",
    "uvicorn[standard] >= 0.15.0",
    "rignore >= 0.5.1",
    "httpx >= 0.27.0",
    "rich-toolkit >= 0.14.5",
    "pydantic[email] >= 1.6.1",
    "sentry-sdk >= 2.20.0",
]

[project.optional-dependencies]
standard = ["uvicorn[standard] >= 0.15.0"]

[project.scripts]
fastapi-cloud = "fastapi_cloud_cli.cli:main"

[project.urls]
Homepage = "https://github.com/fastapilabs/fastapi-cloud-cli"
Documentation = "https://fastapi.tiangolo.com/fastapi-cloud-cli/"
Repository = "https://github.com/fastapilabs/fastapi-cloud-cli"
Issues = "https://github.com/fastapilabs/fastapi-cloud-cli/issues"
Changelog = "https://github.com/fastapilabs/fastapi-cloud-cli/blob/main/release-notes.md"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
version = { source = "file", path = "src/fastapi_cloud_cli/__init__.py" }
distribution = true

[tool.pdm.build]
source-includes = ["tests/", "requirements*.txt", "scripts/"]

[tool.pytest.ini_options]
addopts = ["--strict-config", "--strict-markers"]
xfail_strict = true
junit_family = "xunit2"

[tool.coverage.run]
parallel = true
data_file = "coverage/.coverage"
source = ["src", "tests"]
context = '${CONTEXT}'
dynamic_context = "test_function"
omit = ["tests/assets/*"]

[tool.coverage.report]
show_missing = true
sort = "-Cover"
exclude_lines = [
    "pragma: no cover",
    "@overload",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
show_contexts = true

[tool.mypy]
strict = true
exclude = ["tests/assets/*"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
]

# [tool.ruff.lint.per-file-ignores]
# "__init__.py" = ["F401"]


[tool.ruff.lint.isort]
known-third-party = ["typer", "fastapi"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[dependency-groups]
dev = [
    "coverage>=7.6.1",
    "pytest>=8.3.5",
    "respx>=0.22.0",
]
